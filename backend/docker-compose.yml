version: '2.34'

services:
  backend:
    build: .
    # Not strictly required for them to be alive except for redis
    depends_on:
      celery:
        condition: service_started
        required: true
    ports:
      - "$PORT:3000"
    environment:
      - REDIS_URL=redis://redis
      - PORT=3000
    env_file: .env
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:3000/v1/health || exit 1"]
      retries: 3
      interval: 2s
      timeout: 1s
      start_period: 10s
  celery:
    build: .
    depends_on:
      redis:
        required: true
        condition: service_healthy
      unoserver:
        required: true
        condition: service_healthy
    environment:
      - REDIS_URL=redis://redis
      - UNOSERVER_URL=http://unoserver:2004
    env_file: .env
    command: "celery -A app.worker worker"
    healthcheck:
      test: ["CMD-SHELL", "celery -A app.worker inspect ping -d celery@$(hostname) | grep -q pong"]
      retries: 3
      interval: 2s
      timeout: 1s
      start_period: 10s
  unoserver:
    image: libreofficedocker/libreoffice-unoserver:3.19-9c28c22
#   WARNING! Unsecure! Do not de-comment unless doing quick-local testing
#    ports:
#      - "2004:2004"
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' http://localhost:2004/ | grep -q 404"]
      retries: 3
      interval: 2s
      timeout: 1s
      start_period: 10s
  redis:
    image: redis:alpine
    healthcheck:
      test: ["CMD-SHELL", "redis-cli --raw incr ping"]
      retries: 1
      interval: 2s
      timeout: 1s
      start_period: 3s
#    ports:
#      - "6379:6379"